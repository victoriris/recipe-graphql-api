### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

type Ingredient {
  id: String!
  name: String!
  recipes(cursor: RecipeWhereUniqueInput, skip: Int, take: Int): [Recipe!]!
}

input IngredientCreateInput {
  id: String
  name: String!
  recipes: RecipeCreateManyWithoutIngredientsInput
}

input IngredientCreateManyWithoutRecipesInput {
  connect: [IngredientWhereUniqueInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutrecipesInput!]
  create: [IngredientCreateWithoutRecipesInput!]
}

input IngredientCreateOrConnectWithoutrecipesInput {
  create: IngredientCreateWithoutRecipesInput!
  where: IngredientWhereUniqueInput!
}

input IngredientCreateWithoutRecipesInput {
  id: String
  name: String!
}

input IngredientWhereUniqueInput {
  id: String
}

type Mutation {
  createIngredient(data: IngredientCreateInput!): Ingredient!
  createRecipe(data: RecipeCreateInput!): Recipe!
  rateRecipe(data: RatingCreateInput!): Rating!
}

type Query {
  ingredients(cursor: IngredientWhereUniqueInput, skip: Int, take: Int): [Ingredient!]!
  recipe(where: RecipeWhereUniqueInput!): Recipe
  recipes(cursor: RecipeWhereUniqueInput, skip: Int, take: Int): [Recipe!]!
}

type Rating {
  comment: String!
  createdAt: DateTime!
  recipe: Recipe!
  score: Int!
}

input RatingCreateInput {
  comment: String!
  createdAt: DateTime
  recipe: RecipeCreateOneWithoutRatingInput!
  score: Int!
}

input RatingCreateManyWithoutRecipeInput {
  connect: [RatingWhereUniqueInput!]
  connectOrCreate: [RatingCreateOrConnectWithoutrecipeInput!]
  create: [RatingCreateWithoutRecipeInput!]
}

input RatingCreateOrConnectWithoutrecipeInput {
  create: RatingCreateWithoutRecipeInput!
  where: RatingWhereUniqueInput!
}

input RatingCreateWithoutRecipeInput {
  comment: String!
  createdAt: DateTime
  score: Int!
}

input RatingWhereUniqueInput {
  recipeId_createdAt: RecipeIdCreatedAtCompoundUniqueInput
}

type Recipe {
  content: String!
  createdAt: DateTime!
  id: String!
  ingredients(cursor: IngredientWhereUniqueInput, skip: Int, take: Int): [Ingredient!]!
  name: String!
  rating(cursor: RatingWhereUniqueInput, skip: Int, take: Int): [Rating!]!
  updatedAt: DateTime!
}

input RecipeCreateInput {
  content: String!
  createdAt: DateTime
  id: String
  ingredients: IngredientCreateManyWithoutRecipesInput
  name: String!
  rating: RatingCreateManyWithoutRecipeInput
  updatedAt: DateTime
}

input RecipeCreateManyWithoutIngredientsInput {
  connect: [RecipeWhereUniqueInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutingredientsInput!]
  create: [RecipeCreateWithoutIngredientsInput!]
}

input RecipeCreateOneWithoutRatingInput {
  connect: RecipeWhereUniqueInput
  connectOrCreate: RecipeCreateOrConnectWithoutratingInput
  create: RecipeCreateWithoutRatingInput
}

input RecipeCreateOrConnectWithoutingredientsInput {
  create: RecipeCreateWithoutIngredientsInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateOrConnectWithoutratingInput {
  create: RecipeCreateWithoutRatingInput!
  where: RecipeWhereUniqueInput!
}

input RecipeCreateWithoutIngredientsInput {
  content: String!
  createdAt: DateTime
  id: String
  name: String!
  rating: RatingCreateManyWithoutRecipeInput
  updatedAt: DateTime
}

input RecipeCreateWithoutRatingInput {
  content: String!
  createdAt: DateTime
  id: String
  ingredients: IngredientCreateManyWithoutRecipesInput
  name: String!
  updatedAt: DateTime
}

input RecipeIdCreatedAtCompoundUniqueInput {
  createdAt: DateTime!
  recipeId: String!
}

input RecipeWhereUniqueInput {
  id: String
}
